CREATE DATABASE gestion_ventas

USE gestion_ventas;
CREATE TABLE IF NOT EXISTS forma_pago(
    idforma_pago INT NOT NULL AUTO_INCREMENT, 
    PRIMARY KEY (idforma_pago),
    descripcion VARCHAR(100) NOT NULL,
    tasa DECIMAL (10,3)
)

CREATE TABLE IF NOT EXISTS vendedores(
    idvendedor INT NOT NULL AUTO_INCREMENT, 
    PRIMARY KEY (idvendedor),
    cedula VARCHAR(50) NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    telefono VARCHAR(100),
    direccion VARCHAR(250)
)

CREATE TABLE IF NOT EXISTS productos(
    idproducto INT NOT NULL AUTO_INCREMENT, 
    PRIMARY KEY (idproducto),
    codbarra VARCHAR(50) NOT NULL,
	descripcion VARCHAR(150) NOT NULL,
    costo_base DECIMAL(10,3) NOT NULL,
    rentabilidad DECIMAL(10,2) NOT NULL,
    precio_base DECIMAL(10,3) NOT NULL,
    cantidad DECIMAL(10,2) NOT NULL,
    descuento DECIMAL(10,2) NOT NULL
)

CREATE TABLE IF NOT EXISTS clientes(
    idcliente INT NOT NULL AUTO_INCREMENT, 
    PRIMARY KEY (idcliente),
    cedula VARCHAR(50) NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    telefono VARCHAR(100),
    direccion VARCHAR(250)
)

CREATE TABLE IF NOT EXISTS ventas_cab(
    idventa_cab INT NOT NULL AUTO_INCREMENT, 
    PRIMARY KEY (idventa_cab),
    idcliente INT NOT NULL,
    FOREIGN KEY (idcliente) REFERENCES clientes(idcliente),
    monto_total DECIMAL (10,3),
    idvendedor INT NOT NULL,
    FOREIGN KEY (idvendedor) REFERENCES vendedores(idvendedor),
    fecha_venta DATETIME NOT NULL,
    estado INT NOT NULL
)

CREATE TABLE IF NOT EXISTS ventas_det(
    idventa_det INT NOT NULL AUTO_INCREMENT, 
    PRIMARY KEY (idventa_det),
    idventa_cab INT NOT NULL,
    FOREIGN KEY (idventa_cab) REFERENCES ventas_cab(idventa_cab),
    precio_base DECIMAL (10,3) NOT NULL,
    impuesto DECIMAL (10,3) NOT NULL,
    idproducto INT NOT NULL,
    FOREIGN KEY (idproducto) REFERENCES productos(idproducto),
    fecha_ventadet DATETIME NOT NULL,
    cantidad INT NOT NULL
)

DROP PROCEDURE IF EXISTS actualizar_cantVenta;
DELIMITER //
CREATE PROCEDURE actualizar_cantVenta(IN idregistro INT, IN nuevo_cant INT, IN idventdet INT, OUT mensaje INT(2))
BEGIN
	IF nuevo_cant>(SELECT cantidad FROM productos WHERE idproducto = idregistro)
        THEN
       		SET mensaje=0;
        ELSE     
            UPDATE ventas_det
            SET cantidad=nuevo_cant
            WHERE idventa_det=idventdet;
            SET mensaje=1;
    END IF;
END //

DELIMITER ;


DROP PROCEDURE IF EXISTS agregar_productoDet;
DELIMITER //
CREATE PROCEDURE agregar_productoDet(IN idprod INT, IN idvend INT, IN cant DECIMAL(10,3), OUT mensaje VARCHAR(10))
BEGIN
    DECLARE idcab INT;
    DECLARE precio_b DECIMAL(10,3);
   
    SET idcab = (SELECT idventa_cab FROM ventas_cab where idvendedor = idvend);
    SET precio_b= (SELECT precio_base FROM productos WHERE idproducto = idprod);
    
    IF idprod=(SELECT idproducto FROM ventas_det WHERE idproducto = idprod AND idventa_cab = idcab GROUP BY idproducto)
        THEN
       		SET mensaje=0;
        ELSE     
            INSERT INTO ventas_det(idventa_cab, precio_base, impuesto, idproducto, fecha_ventadet, cantidad) VALUES (idcab,precio_b,16.00, idprod, NOW(), cant);
            SET mensaje=1;
    END IF;
    
END //

DELIMITER ;

DROP PROCEDURE IF EXISTS crear_ventacab;
DELIMITER //
CREATE PROCEDURE crear_ventacab(IN idvend INT,OUT mensaje VARCHAR(10))
BEGIN
    IF idvend=(SELECT idvendedor FROM ventas_cab WHERE idvendedor = idvend AND estado = 1 GROUP BY idvendedor)
        THEN
       		SET mensaje=0;
        ELSE     
            INSERT INTO ventas_cab(idcliente, monto_total, idvendedor, fecha_venta, estado) VALUES (1, 0, idvend, NOW(),1);
            SET mensaje=1;
    END IF;
    
END //

DELIMITER ;

DROP PROCEDURE IF EXISTS eliminar_cesta;
DELIMITER //
CREATE PROCEDURE eliminar_cesta(IN idvend INT, OUT mensaje INT(2))
BEGIN
	DECLARE idcab INT;
   
    SET idcab = (SELECT idventa_cab FROM ventas_cab where idvendedor = idvend);
       
    DELETE FROM ventas_det WHERE idventa_cab = idcab;
    
    SET mensaje='1';
END //

DELIMITER ;
